<!DOCTYPE html>
<html>
<head>
	<title>Stiikr</title>

		<!-- Viewport mobile tag for sensible mobile support -->
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

	<!--STYLES-->
	<link rel="stylesheet" href="/styles/importer.css">
	<!--STYLES END-->
</head>
<body class="{{#if user}}authenticated{{/if}}">

	<header class="main-header">
		<div class="wrapper">
			<h1><a href="/">Stiikr</a></h1>

			<nav class="main-nav">
				<ul>
					<li class="selected"><a href="/">today</a></li>
					<li><a href="/wall">wall</a></li>
				</ul>
			</nav>

			<div class="profile-area">
			{{#if user}}
				<div class="profile-photo">
					<img src="{{user.photo}}" />
				</div>
				<p><a href="/logout">logout</a></p>
			{{else}}
				<p><a href="/auth/twitter">login</a></p>
			{{/if}}
			</div>

		</div>
	</header>


	{{{body}}}


	<footer class="main-footer">
		<nav>
			<ul class="wrapper">
				<li><a href="/"></a></li>
				<li><a href="/"></a></li>
				<li><a href="/"></a></li>
				<li><a href="/"></a></li>
				<li><a href="/"></a></li>
			</ul>
		</nav>
	</footer>


		<!--
				Client-side Templates
				========================

				To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
				that you load these templates client-side.

				By default, your Gruntfile is configured to automatically load and precompile
				client-side JST templates in your `assets/templates` folder, then
				include them here automatically (between TEMPLATES and TEMPLATES END).

				To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
				For example, here are a few things you could do:

						+ Import templates from other directories
						+ Use a different template engine (handlebars, jade, dust, etc.)
						+ Internationalize your client-side templates using a server-side
							stringfile before they're served.
		-->

		<!--TEMPLATES-->

		<!--TEMPLATES END-->


		<!--

			Client-side Javascript
			========================

			By default, files in your `assets/js` folder are included here
			automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
			CoffeeScript (.coffee) are supported. In production, your scripts will be minified
			and concatenated into a single file.

			To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
			For example, here are a few things you could do:

					+ Change the order of your scripts
					+ Import scripts from other directories
					+ Use a different preprocessor, like TypeScript

		-->

	{{> analytics}}

	<!--SCRIPTS-->
	<script src="/js/dependencies/sails.io.js"></script>
<!--	<script src="https://code.jquery.com/jquery-2.1.3.min.js"></script>-->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js "></script>
	<script src="http://timeago.yarp.com/jquery.timeago.js"></script>
	<script src="/js/app.js"></script>
	<!--SCRIPTS END-->
</body>
</html>
